Algorithm: 
This is the most efficient approach. Here's the intuition:

Maintain a candidate for the majority and a count.

Traverse the array:

If count == 0, choose the current number as a new candidate.

If the current number is the same as the candidate, increment count.

Else, decrement count.

At the end, the candidate will be the majority element

CODE:
public class MajorityElement {

    public int majorityElement(int[] nums) {
        int count = 0;
        int candidate = 0;

        for (int num : nums) {
            if (count == 0) {
                candidate = num;
            }
            count += (num == candidate) ? 1 : -1;
        }

        return candidate;
    }

    public static void main(String[] args) {
        MajorityElement solver = new MajorityElement();
        int[] nums = {2, 2, 1, 1, 1, 2, 2};
        
        int result = solver.majorityElement(nums);
        System.out.println("Majority element is: " + result);
    }
}

